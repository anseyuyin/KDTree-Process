import { kdTree } from "./kdTree.js";
import { Icommand, commandMgr, setState, batState } from "./command.js";

//temp map data
var data = [[1,1],[2,2],[3,3],[5,6]];
let pointsData = [[166.6173282662226,429.76959211490316],[1.8264262786789986,388.0074497292451],[288.34243402561543,161.49384371921414],[367.95105733128537,35.729285981656474],[188.9544953721337,317.8954761301725],[240.56243227859747,462.47928382539993],[51.79649604164001,494.1675623398755],[158.76511295136913,183.23362420598832],[327.632376653171,473.9982642402771],[32.85915271118498,421.8780440876842],[126.24469390333054,166.7166094055164],[84.77397646090368,82.62400358249165],[400.3529980962033,188.82742857628156],[288.4642770192552,54.0326751686422],[205.24762425693402,249.43040288212796],[292.97728683061194,117.08892615741982],[68.52886754256129,217.85186958299758],[389.0051833362209,4.697872753358201],[121.13809332250104,467.47971911279836],[87.9224229803447,294.58759780608955],[233.5959871501988,421.597449620618],[227.63141553616208,77.56169505600128],[442.29223961392177,260.4082567372394],[147.77443725907173,443.8879245964896],[247.36750049881655,235.39381605086814],[235.44926677595762,553.0501156343375],[230.7119399744625,559.6838062862035],[53.953607927581174,64.2954113732114],[3.4648291281910915,292.11652319356364],[316.7831534298166,207.30329506093045],[455.4389354233524,110.18459289058839],[67.75056088640551,59.429964904820864],[225.82699822458926,110.07629591053471],[287.03900119918717,448.73552885601447],[58.77159528365742,306.965020901521],[91.27389303464047,203.67493803859335],[347.69035947263154,261.5932658062664],[383.70178965326426,212.3081291764524],[337.05328097163317,249.35807405158553],[368.03775556767096,514.0883070398403],[58.09206779584577,154.95893354405473],[231.74731008809192,42.72008138314835],[233.27274214867018,381.3490984699659],[286.8326177587784,400.59835367038835],[443.06058954484,82.44955354858176],[240.1781790328277,151.5488722036518],[23.207714580873034,393.11928994812814],[104.54577035686626,482.30642262827325],[285.2171109801336,231.9641609966265],[145.84691072739426,462.2079720773817],[209.26453883967193,414.7941982942588],[170.7485790649865,10.240644623738948],[297.48892125396713,499.0542324040133],[74.13890656130613,404.43378580847656],[257.79535570184385,280.52933003724814],[183.7979483215631,234.6583414896088],[69.46004530642404,284.10054525033155],[358.92652968518865,88.40657412349879],[429.9239193036226,249.53128442682262],[180.68052100863534,370.2636294732423],[255.45846543913,480.0338123428515],[167.86792818593193,413.4429882465435],[86.25330046632465,460.01727516446743],[146.93448989783502,98.91165036342242],[184.50419142517987,75.14023072044711],[437.40307264230995,321.62630508548136],[385.33366802236617,223.46338622484384],[98.2324751448747,150.7998595648468],[173.74265374601296,408.6397018868697],[89.49431376406552,284.0063623472611],[69.95319863648497,455.7656500125818],[80.56630841410235,22.8848823292296],[416.31303611675185,54.876574210726226],[210.75289538001698,374.7330640290711],[268.9088787614132,218.4349951823228],[17.040522116601274,283.1628956118939],[152.35733005663775,117.90737920687512],[277.24958047805706,367.53803512403914],[111.57782862572729,449.43426966388387],[399.15830730833204,356.20611034906267],[217.80746819595942,376.40154882525303],[321.0940991698004,505.3561578289043],[222.11606891502473,129.89144814312345],[394.7305984221521,17.124480008864875],[295.70232712701545,126.90077676796477],[339.41025494129923,159.76204847071372],[188.33244604848036,201.11460105450084],[143.25841644481332,127.34628739056419],[278.9511175061587,295.38564119547743],[13.02393668071415,279.9586083149619],[240.1197030729934,64.61402226943392],[322.28438837019837,179.0795858447846],[304.46333281224395,297.43252204583723],[179.87464599310542,529.0661227845085],[295.7187521738006,43.23489301180594],[427.510960895268,312.6305297335105],[87.24240305499254,315.55635032215747],[60.708758496313635,415.50809751558194],[146.86332003344495,202.18295367019954],[153.51614528321798,554.0968622423005],[303.42675758476105,361.06547147896777],[391.4524300316498,336.5026537590094],[336.732004364977,38.60816312592242],[86.4663228346617,273.27078062925705],[200.70788174168172,537.243604958215],[268.4233964568196,212.83459467684202],[243.04289084978157,342.9668988847429],[150.69362903644063,309.7739648387286],[260.17156559193677,7.309379420327016],[95.66117824503868,299.47169520573794],[433.47867551801335,375.8112181549821],[279.50593343865097,216.90493375440002],[418.94062109235523,381.26991765505295],[236.50559681371112,145.76492463762884],[32.46601796244231,150.97370887553038],[61.17321039143859,363.48924666670393],[104.24658446805874,359.4255856015875],[120.02438184320967,58.85869181605892],[284.78347925504124,264.07308140184944],[28.355462993665228,407.4547119247907],[243.40352816454427,303.72482448368726],[375.60751506372105,74.41831679409736],[415.5141108729755,458.1498519230356],[309.0070182874177,371.80984901311103],[42.95511689225358,406.9053672896376],[73.22295841167805,432.61647320303797],[375.7021336481888,538.3515364024589],[305.23336675738733,556.1877192434557],[33.441859089766815,1.4154480088186538],[15.647634145527128,388.5962367827949],[325.2215467836344,453.7462193151495],[149.256022929333,337.4434379214506],[195.52009543536823,472.272628023344],[115.21423540578732,177.93134902807543],[273.13780359906247,461.37007485136786],[60.20899942771605,220.90338063182915],[142.00291150841576,38.0004589670324],[43.336491450747495,326.4240640811527],[144.37005166787273,351.67080892975065],[333.58206237181287,254.19758164708492],[52.47144091382462,167.2062695949111],[4.894858869025982,121.67905324197616],[208.95807429058627,454.90216131182945],[60.16247968775558,272.44763205468786],[433.47553618407846,450.51163210494275],[354.3753629441658,101.2758968387025],[156.31555010860794,337.1038816496474],[278.8460046325754,139.5225345329907],[271.7998289599742,397.03821697745667],[272.57638937493954,482.8218636625268],[238.4588921859582,326.3133492401986],[432.182278748619,465.50308040886455],[151.48862266356755,153.60035478986927],[26.792118429343734,468.1078476382575],[235.2547794700216,321.01903501721023],[344.66794635972553,442.44513689285367],[177.53191972921084,221.70922946189586],[328.7365099700122,150.98497704125617],[258.20169257374647,161.92513486755476],[0.7975530101536021,197.39439256047086],[82.55396238814629,529.1659239127627],[146.57821121842144,38.33835738642934],[330.6052058991666,159.28507912213902],[183.15278721063214,373.7527666195852],[159.06513021081014,427.5750787105584],[309.9963742782524,159.37663609027732],[336.7523429879375,513.0040326647288],[311.9596922944864,342.8046776708596],[422.65945871612746,14.903267491416887],[286.409608502077,35.60971203578488],[428.1211248865861,9.93649008428621],[87.49615929887315,35.93880549456127],[209.87209479896228,9.485022497956379],[401.10130858005704,545.6089919276751],[381.010719966057,222.43543363412542],[345.14822609474857,302.09728878679385],[362.03938503194433,7.018570024602688],[248.3993128966855,400.33599394166333],[177.9268843055336,490.89451498185605],[117.64438274054609,501.3464211136515],[99.47773687809298,76.42960604684103],[86.54456614777602,31.643645889541858],[8.71557285059303,402.5912060982253],[313.3817332518189,352.7486345269096],[365.181950580097,457.14065526687415],[91.770908825592,165.49162882201156],[282.9053165696476,523.8617093288836],[100.51252441130056,98.40613185826442],[87.14313417916462,23.93264667321917],[164.90827401903132,164.80049922216347],[170.20413934680312,506.352389276402],[81.15977449840717,28.239216838424195],[426.03847265703087,464.74328397651357],[240.98181409439323,216.93422411944854],[34.87470781947946,547.8789756321528],[251.8257763231191,442.36657709022575],[24.91205496624108,499.66428308395245],[163.30453128090915,484.06270828595825],[145.73322170450086,554.2692606477642],[442.20401552800644,492.2044656943832]];
let svgNS="http://www.w3.org/2000/svg";
let helpv2 = [0,0];
let helpv2s = [];
export class main {
    trigger_Near = false;  //搜索范围 or  最近
    trigger_Down = false;  //点击刷新 or 移动鼠标

    kd : kdTree;
    constructor() {
        console.error(`fffff`);
        let kdt = new kdTree();
        // kdt.buildTree(data);

        // let out = [];
        // kdt.find([1.49,1.5],out);
        // let out_ = [];
        // kdt.search(0.75,[1.5,1.5],out_);
        
        this.kd = kdt;
        this.init();
    }

    pointes : Element[] = [];
    pointeDic : {[key:string]:Element} = {};
    inited = false;
    cir : Element;
    init(){
        // cir 
        let cir = this.makeACir();
        this.cir = cir;

        //test
        let ssvg = document.getElementsByClassName("ssvg")[0];
        let self = this;
        ssvg.appendChild(cir);
        let searchR = 30;

        if(this.trigger_Down){
            let downPoint = [0,0];
            //点击刷新
            ssvg.onpointerdown =function(this:GlobalEventHandlers,ev:PointerEvent){
                downPoint[0] = ev.offsetX;
                downPoint[1] = ev.offsetY;
                self.calcuPoints(searchR,downPoint);
            }
        }else{
            let movePoint = [0,0];
            //移动刷新
            ssvg.onpointermove = function(this:GlobalEventHandlers,ev:PointerEvent){
                if(ev.offsetX==movePoint[0] && ev.offsetY==movePoint[1] )return;
                movePoint[0] = ev.offsetX;
                movePoint[1] = ev.offsetY;
                self.calcuPoints(searchR,movePoint);
            }
        }
        
        //创建 点 数据-----------------------
        let maxW = 460;
        let maxH = 560;
        let num = 200;
        let rsize = 6;
        let kdData = [];

        //随机创建 xx  个点
        for(let i=0 ;i< num ; i++){
            let w = Math.random() * maxW;
            let h = Math.random() * maxH;
            let pos = [w,h];
            kdData.push(pos);
        }

        //整齐创建 xx  个点
        // let gap = 30;
        // for(let i=0 ;i< num ; i++){
        //     let w = i%10 * gap;
        //     let h = Math.floor(i / 10) * gap;
        //     let pos = [w,h];
        //     kdData.push(pos);
        // }

        //指定数组
        // kdData = pointsData;

        kdData.forEach(sub=>{
            if(sub){
                let key = `${sub[0]}_${sub[1]}`;
                let po = this.makeCirPoint(rsize,sub,ssvg);
                this.pointes.push(po);
                this.pointeDic[key] = po; 
            }
        })

        //kd tree 
        this.kd.buildTree(kdData);
        this.inited = true;
    }

    //计算 & 刷新
    calcuPoints(searchR,movePoint){
         //move
         this.moveCirFrame(searchR,movePoint);

         //判断搜索
         if(this.trigger_Near){
             this.searchNear(movePoint);
         }else{
            this.searchPoints(searchR,movePoint);
         }
    }

    //移动刷新圆框
    moveCirFrame(searchR :number , movePoint : number[]){
        let arr = this.crateCirData(searchR,movePoint);
        this.cir.setAttribute("points",arr.toString());
    }

    //搜索 最近的一个
    searchNear(movePoint : number[]){
        if(this.inited){
            //find near
            this.kd.find(movePoint,helpv2);
            helpv2s = [helpv2];
            this.refreashPoints(helpv2s);
        }
    }

    //搜索 范围内的点
    searchPoints(searchR :number , movePoint : number[]){
        //判断搜索
        if(this.inited){
            //search by range 
            this.kd.search(searchR,movePoint,helpv2s);
            this.refreashPoints(helpv2s);
        }
    }

    //刷新所选中点
    refreashPoints(points : number[][]){
        if(!points || points.length < 1) return;
        let pos = [];
        points.forEach(v2=>{
            if(v2){
                let key = `${v2[0]}_${v2[1]}`;
                pos.push(this.pointeDic[key]);
            }
        });

        //刷新显示
        if(pos.length > 0){
            this.pointes.forEach(sub=>{
                if(sub){
                    sub.setAttribute("fill","white");
                }
            });
            pos.forEach(po=>{
                if(po){
                    po.setAttribute("fill","red");
                }
            });
        }
    }


    //创建 圆点
    makeCirPoint(r:number,pos:number[],root:Element){
        let cc = document.createElementNS(svgNS,"circle");
        cc.setAttribute("cx",`${pos[0]}`);
        cc.setAttribute("cy",`${pos[1]}`);
        cc.setAttribute("stroke","black");
        cc.setAttribute("stroke-width","1");
        cc.setAttribute("r",`${r}`);
        cc.setAttribute("fill","white");
        root.appendChild(cc);
        return cc;
    }

    //创建 圆框
    makeACir(){
        let r = 10;
        let center = [0,0];
        let pointrs = this.crateCirData(r,center);

        let linecc = document.createElementNS(svgNS,"polyline");
        let pp  =pointrs.toString();
        linecc.setAttribute("points",pp);
        linecc.setAttribute("style","fill:none;stroke:red;stroke-width:1");
        return linecc;
    }

    crateCirData(r:number,center:number[] ):number[]{
        let edge = 20;
        let angle = Math.PI/edge * 2;
        let arr = [];
        for(let i = 0;i<edge ; i++){
            let a = angle * i;
            let x = Math.sin(a);
            let y = Math.cos(a);
            let pos = [x,y];
            vec2Normalize(pos,pos);
            vec2ScaleByNum(pos,r,pos);
            vec2Add(pos,center,pos);
            arr.push(pos);
        }

        if(arr.length > 0 ){
            arr.push(arr[0]);
        }
        return arr;
    }

}

// math v2

function vec2Length(a: number[]): number {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1]);
}

function vec2Normalize(from: number[], out: number[]) {
    let num: number = vec2Length(from);
    if (num > Number.MIN_VALUE) {
        out[0] = from[0] / num;
        out[1] = from[1] / num;
    } else {
        out[0] = 0;
        out[1] = 0;
    }
}

function vec2ScaleByNum(from: number[], scale: number, out: number[]) {
    out[0] = from[0] * scale;
    out[1] = from[1] * scale;
}

function vec2Subtract(a: number[], b: number[], out: number[]) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
}

function vec2Add(a: number[], b: number[], out: number[]) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
}
